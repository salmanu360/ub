<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "posts".
 *
 * @property integer $id
 * @property string $title
 * @property string $seo_title
 * @property string $body
 * @property integer $blog_category_id
 * @property string $blog_tag
 * @property string $image
 * @property string $slug
 * @property string $meta_description
 * @property string $meta_keywords
 * @property string $status
 * @property integer $featured
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $aliasModel
 */
abstract class Posts extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_PUBLISHED = 'PUBLISHED';
    const STATUS_DRAFT = 'DRAFT';
    const STATUS_PENDING = 'PENDING';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'posts';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'body', 'slug'], 'required'],
            [['body', 'blog_tag', 'meta_description', 'meta_keywords', 'status'], 'string'],
            [['blog_category_id', 'featured'], 'integer'],
            [['title', 'seo_title', 'image', 'slug'], 'string', 'max' => 255],
            [['slug'], 'unique'],
            ['status', 'in', 'range' => [
                    self::STATUS_PUBLISHED,
                    self::STATUS_DRAFT,
                    self::STATUS_PENDING,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'seo_title' => 'Seo Title',
            'body' => 'Body',
            'blog_category_id' => 'Blog Category ID',
            'blog_tag' => 'Blog Tag',
            'image' => 'Image',
            'slug' => 'Slug',
            'meta_description' => 'Meta Description',
            'meta_keywords' => 'Meta Keywords',
            'status' => 'Status',
            'featured' => 'Featured',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_PUBLISHED => 'Published',
            self::STATUS_DRAFT => 'Draft',
            self::STATUS_PENDING => 'Pending',
        ];
    }

}
